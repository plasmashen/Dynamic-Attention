import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
plt.rcParams['text.usetex'] = True

AACC0="""0.391	0	0	0	0	0	0	0	0	0
0.5222	0.5828	0	0	0	0	0	0	0	0
0.5973	0.6362	0.6661	0	0	0	0	0	0	0
0.6462	0.6425	0.6643	0.6633	0	0	0	0	0	0
0.6615	0.6733	0.6814	0.6796	0.657	0	0	0	0	0
0.6688	0.6715	0.676	0.6697	0.6588	0.6452	0	0	0	0
0.6778	0.6805	0.6633	0.6624	0.6398	0.6407	0.6335	0	0	0
0.6715	0.6597	0.6606	0.6579	0.6543	0.6398	0.6145	0.6009	0	0
0.6724	0.657	0.6633	0.6452	0.6317	0.6199	0.6136	0.6045	0.6	0
0.6615	0.6606	0.6498	0.6271	0.6271	0.6163	0.6054	0.5919	0.59	0.5919"""

AACC1="""0.3855	0	0	0	0	0	0	0	0	0
0.5077	0.5828	0	0	0	0	0	0	0	0
0.5674	0.6335	0.6606	0	0	0	0	0	0	0
0.6217	0.6543	0.6652	0.6579	0	0	0	0	0	0
0.6624	0.6697	0.6688	0.657	0.667	0	0	0	0	0
0.6751	0.6706	0.6697	0.6606	0.6579	0.648	0	0	0	0
0.676	0.6706	0.6796	0.6652	0.6652	0.6579	0.6498	0	0	0
0.6833	0.6896	0.6824	0.6633	0.657	0.6552	0.6416	0.6434	0	0
0.6778	0.6697	0.6769	0.6498	0.6597	0.6507	0.6507	0.6308	0.6262	0
0.6869	0.6751	0.6633	0.6606	0.6371	0.6471	0.6317	0.6217	0.6163	0.609"""

AACC2="""0.3701	0	0	0	0	0	0	0	0	0
0.476	0.5719	0	0	0	0	0	0	0	0
0.5819	0.6127	0.6498	0	0	0	0	0	0	0
0.6109	0.6389	0.6579	0.6489	0	0	0	0	0	0
0.6416	0.6507	0.6643	0.6606	0.6507	0	0	0	0	0
0.657	0.6661	0.6643	0.6724	0.6597	0.6643	0	0	0	0
0.6661	0.6661	0.6751	0.6661	0.6715	0.6652	0.6652	0	0	0
0.676	0.676	0.6742	0.6661	0.6652	0.6643	0.6643	0.6606	0	0
0.6787	0.686	0.6769	0.6724	0.6661	0.6633	0.6697	0.6624	0.6697	0
0.6905	0.6796	0.6787	0.676	0.6643	0.6715	0.6715	0.6561	0.6624	0.6498"""

AACC3="""0.3403	0	0	0	0	0	0	0	0	0
0.4724	0.5321	0	0	0	0	0	0	0	0
0.5348	0.6018	0.6353	0	0	0	0	0	0	0
0.5819	0.6308	0.6516	0.6688	0	0	0	0	0	0
0.6145	0.6643	0.6462	0.6652	0.6661	0	0	0	0	0
0.6452	0.6525	0.6679	0.6706	0.6688	0.6679	0	0	0	0
0.6597	0.6679	0.6778	0.6742	0.6633	0.6724	0.6787	0	0	0
0.6751	0.6661	0.6733	0.6624	0.6633	0.6742	0.6597	0.6624	0	0
0.676	0.6751	0.6842	0.6778	0.6697	0.6679	0.6706	0.6751	0.6742	0
0.6796	0.6851	0.6851	0.6778	0.6751	0.6805	0.676	0.676	0.6833	0.6833"""

AACC4="""0.3086	0	0	0	0	0	0	0	0	0
0.4398	0.5104	0	0	0	0	0	0	0	0
0.514	0.5665	0.5891	0	0	0	0	0	0	0
0.5738	0.6154	0.6235	0.6525	0	0	0	0	0	0
0.6127	0.6244	0.6516	0.6588	0.6688	0	0	0	0	0
0.6344	0.638	0.6597	0.6697	0.6697	0.6742	0	0	0	0
0.6434	0.6543	0.6751	0.6715	0.6697	0.6778	0.6751	0	0	0
0.6525	0.6796	0.6715	0.6751	0.6787	0.6715	0.6706	0.6715	0	0
0.6633	0.6733	0.6706	0.6842	0.6769	0.6769	0.6733	0.6742	0.6796	0
0.6787	0.6805	0.6697	0.686	0.686	0.6842	0.6805	0.6833	0.6842	0.6923"""

AACC5="""0.2833	0	0	0	0	0	0	0	0	0
0.4027	0.4787	0	0	0	0	0	0	0	0
0.4833	0.5222	0.5710	0	0	0	0	0	0	0
0.5430	0.5683	0.5982	0.6253	0	0	0	0	0	0
0.5638	0.6072	0.6362	0.6380	0.6579	0	0	0	0	0
0.6100	0.6090	0.6480	0.6624	0.6742	0.6697	0	0	0	0
0.6063	0.6353	0.6498	0.6643	0.6733	0.6769	0.6760	0	0	0
0.6208	0.6471	0.6498	0.6643	0.6724	0.6751	0.6824	0.6778	0	0
0.6380	0.6425	0.6615	0.6706	0.6787	0.6787	0.6796	0.6878	0.6887	0
0.6462	0.6679	0.6633	0.6778	0.6778	0.6932	0.6814	0.6878	0.6824	0.6824"""

OACC0="""0.9280	0	0	0	0	0	0	0	0	0
0.9280	0.9273	0	0	0	0	0	0	0	0
0.9340	0.9327	0.9240	0	0	0	0	0	0	0
0.9300	0.9327	0.9233	0.9173	0	0	0	0	0	0
0.9280	0.9267	0.9167	0.9100	0.8993	0	0	0	0	0
0.9253	0.9213	0.9147	0.9053	0.8873	0.8607	0	0	0	0
0.9293	0.9200	0.9047	0.8933	0.8713	0.8427	0.8220	0	0	0
0.9080	0.9093	0.8940	0.8673	0.8520	0.8207	0.7927	0.7780	0	0
0.9013	0.8973	0.8780	0.8567	0.8213	0.7967	0.7760	0.7500	0.7193	0
0.8973	0.8833	0.8660	0.8347	0.7980	0.7700	0.7433	0.7167	0.6893	0.6687"""

OACC1="""0.9333	0	0	0	0	0	0	0	0	0
0.9287	0.9273	0	0	0	0	0	0	0	0
0.9307	0.9333	0.9333	0	0	0	0	0	0	0
0.9327	0.9333	0.9287	0.9267	0	0	0	0	0	0
0.934	0.928	0.928	0.92	0.9153	0	0	0	0	0
0.9267	0.9287	0.924	0.9207	0.9147	0.904	0	0	0	0
0.9307	0.9247	0.9233	0.9167	0.9033	0.8967	0.89	0	0	0
0.9233	0.92	0.9127	0.908	0.8987	0.8807	0.876	0.85	0	0
0.9227	0.9187	0.9053	0.8973	0.884	0.876	0.8633	0.8367	0.812	0
0.9207	0.9127	0.9087	0.8953	0.88	0.8633	0.84	0.8133	0.7887	0.7647"""

OACC2="""0.93	0	0	0	0	0	0	0	0	0
0.9287	0.9287	0	0	0	0	0	0	0	0
0.9347	0.93	0.9347	0	0	0	0	0	0	0
0.9353	0.9313	0.9333	0.93	0	0	0	0	0	0
0.9407	0.9353	0.9347	0.928	0.9273	0	0	0	0	0
0.9347	0.932	0.9313	0.924	0.922	0.9193	0	0	0	0
0.9347	0.93	0.928	0.9233	0.918	0.918	0.914	0	0	0
0.9233	0.932	0.922	0.9213	0.9207	0.916	0.9147	0.9107	0	0
0.9307	0.9267	0.9227	0.918	0.9173	0.916	0.9087	0.8987	0.8927	0
0.924	0.932	0.9187	0.92	0.91	0.908	0.9	0.89	0.8833	0.8653"""

OACC3="""0.934	0	0	0	0	0	0	0	0	0
0.9293	0.93	0	0	0	0	0	0	0	0
0.934	0.9367	0.9367	0	0	0	0	0	0	0
0.934	0.9307	0.9367	0.94	0	0	0	0	0	0
0.9407	0.934	0.9387	0.936	0.932	0	0	0	0	0
0.9387	0.9347	0.9387	0.934	0.9313	0.9267	0	0	0	0
0.9353	0.9327	0.9373	0.932	0.9307	0.9293	0.9267	0	0	0
0.9393	0.9393	0.9327	0.9327	0.9293	0.9287	0.9313	0.9307	0	0
0.934	0.9347	0.9333	0.932	0.93	0.9287	0.9307	0.9307	0.9227	0
0.9387	0.9347	0.936	0.9293	0.9287	0.9273	0.93	0.926	0.924	0.9187"""

OACC4="""0.9293	0	0	0	0	0	0	0	0	0
0.9333	0.9327	0	0	0	0	0	0	0	0
0.934	0.9347	0.9373	0	0	0	0	0	0	0
0.9347	0.9347	0.9347	0.9373	0	0	0	0	0	0
0.932	0.9373	0.938	0.9387	0.9393	0	0	0	0	0
0.9347	0.936	0.9393	0.9393	0.936	0.9373	0	0	0	0
0.9353	0.9347	0.936	0.934	0.9347	0.936	0.9373	0	0	0
0.938	0.9367	0.9353	0.938	0.9387	0.9367	0.9433	0.938	0	0
0.9347	0.9353	0.938	0.938	0.9367	0.938	0.94	0.938	0.9347	0
0.9353	0.9333	0.9373	0.9367	0.9387	0.936	0.9387	0.936	0.9333	0.9347"""

OACC5="""0.93	0	0	0	0	0	0	0	0	0
0.9307	0.9333	0	0	0	0	0	0	0	0
0.934	0.932	0.936	0	0	0	0	0	0	0
0.9353	0.936	0.936	0.9353	0	0	0	0	0	0
0.934	0.9347	0.936	0.9353	0.9367	0	0	0	0	0
0.9327	0.938	0.934	0.9367	0.9367	0.9347	0	0	0	0
0.9367	0.9353	0.9353	0.932	0.9313	0.9313	0.9313	0	0	0
0.9347	0.938	0.9333	0.9353	0.936	0.93	0.93	0.9313	0	0
0.9353	0.9367	0.9373	0.9327	0.9327	0.9333	0.9333	0.9327	0.9353	0
0.934	0.9353	0.9353	0.9367	0.9307	0.934	0.9333	0.9353	0.9373	0.938"""

TACC0="""2.101	0	0	0	0	0	0	0	0	0
2.4946	2.6757	0	0	0	0	0	0	0	0
2.7259	2.8413	2.9223	0	0	0	0	0	0	0
2.8686	2.8602	2.9162	2.9072	0	0	0	0	0	0
2.9125	2.9466	2.9609	2.9488	2.8703	0	0	0	0	0
2.9317	2.9358	2.9427	2.9144	2.8637	2.7963	0	0	0	0
2.9627	2.9615	2.8946	2.8805	2.7907	2.7648	2.7225	0	0	0
2.9225	2.8884	2.8758	2.841	2.8149	2.7401	2.6362	2.5807	0	0
2.9185	2.8683	2.8679	2.7923	2.7164	2.6564	2.6168	2.5635	2.5193	0
2.8818	2.8651	2.8154	2.716	2.6793	2.6189	2.5595	2.4924	2.4593	2.4444"""

TACC1="""2.0898	0	0	0	0	0	0	0	0	0
2.4518	2.6757	0	0	0	0	0	0	0	0
2.6329	2.8338	2.9151	0	0	0	0	0	0	0
2.7978	2.8962	2.9243	2.9004	0	0	0	0	0	0
2.9212	2.9371	2.9344	2.891	2.9163	0	0	0	0	0
2.952	2.9405	2.9331	2.9025	2.8884	2.848	0	0	0	0
2.9587	2.9365	2.9621	2.9123	2.8989	2.8704	2.8394	0	0	0
2.9732	2.9888	2.9599	2.8979	2.8697	2.8463	2.8008	2.7802	0	0
2.9561	2.9278	2.936	2.8467	2.8631	2.8281	2.8154	2.7291	2.6906	0
2.9814	2.938	2.8986	2.8771	2.7913	2.8046	2.7351	2.6784	2.6376	2.5917"""

TACC2="""2.0403	0	0	0	0	0	0	0	0	0
2.3567	2.6444	0	0	0	0	0	0	0	0
2.6804	2.7681	2.8841	0	0	0	0	0	0	0
2.768	2.848	2.907	2.8767	0	0	0	0	0	0
2.8655	2.8874	2.9276	2.9098	2.8794	0	0	0	0	0
2.9057	2.9303	2.9242	2.9412	2.9011	2.9122	0	0	0	0
2.933	2.9283	2.9533	2.9216	2.9325	2.9136	2.9096	0	0	0
2.9513	2.96	2.9446	2.9196	2.9163	2.9089	2.9076	2.8925	0	0
2.9668	2.9847	2.9534	2.9352	2.9156	2.9059	2.9178	2.8859	2.9018	0
2.9955	2.9708	2.9548	2.948	2.9029	2.9225	2.9145	2.8583	2.8705	2.8147"""

TACC3="""1.9549	0	0	0	0	0	0	0	0	0
2.3465	2.5263	0	0	0	0	0	0	0	0
2.5384	2.7421	2.8426	0	0	0	0	0	0	0
2.6797	2.8231	2.8915	2.9464	0	0	0	0	0	0
2.7842	2.9269	2.8773	2.9316	2.9303	0	0	0	0	0
2.8743	2.8922	2.9424	2.9458	2.9377	2.9304	0	0	0	0
2.9144	2.9364	2.9707	2.9546	2.9206	2.9465	2.9628	0	0	0
2.9646	2.9376	2.9526	2.9199	2.9192	2.9513	2.9104	2.9179	0	0
2.962	2.96	2.9859	2.9654	2.9391	2.9324	2.9425	2.956	2.9453	0
2.9775	2.99	2.9913	2.9627	2.954	2.9688	2.958	2.954	2.9739	2.9686"""

TACC4="""1.8551	0	0	0	0	0	0	0	0	0
2.2527	2.4639	0	0	0	0	0	0	0	0
2.476	2.6342	2.7046	0	0	0	0	0	0	0
2.6561	2.7809	2.8052	2.8948	0	0	0	0	0	0
2.7701	2.8105	2.8928	2.9151	2.9457	0	0	0	0	0
2.8379	2.85	2.9184	2.9484	2.9451	2.9599	0	0	0	0
2.8655	2.8976	2.9613	2.9485	2.9438	2.9694	2.9626	0	0	0
2.8955	2.9755	2.9498	2.9633	2.9748	2.9512	2.9551	2.9525	0	0
2.9246	2.9552	2.9498	2.9906	2.9674	2.9687	2.9599	2.9606	2.9735	0
2.9714	2.9748	2.9464	2.9947	2.9967	2.9886	2.9802	2.9859	2.9859	3.0116"""

TACC5="""1.7799	0	0	0	0	0	0	0	0	0
2.1388	2.3694	0	0	0	0	0	0	0	0
2.3839	2.4986	2.649	0	0	0	0	0	0	0
2.5643	2.6409	2.7306	2.8112	0	0	0	0	0	0
2.6254	2.7563	2.8446	2.8493	2.9104	0	0	0	0	0
2.7627	2.765	2.878	2.9239	2.9593	2.9438	0	0	0	0
2.7556	2.8412	2.8847	2.9249	2.9512	2.962	2.9593	0	0	0
2.7971	2.8793	2.8827	2.9282	2.9532	2.9553	2.9772	2.9647	0	0
2.8493	2.8642	2.9218	2.9445	2.9688	2.9694	2.9721	2.9961	3.0014	0
2.8726	2.939	2.9252	2.9701	2.9641	3.0136	2.9775	2.9987	2.9845	2.9852"""

AACC0 = np.array([[float(j) for j in i.split('\t')] for i in AACC0.split('\n')])
AACC1 = np.array([[float(j) for j in i.split('\t')] for i in AACC1.split('\n')])
AACC2 = np.array([[float(j) for j in i.split('\t')] for i in AACC2.split('\n')])
AACC3 = np.array([[float(j) for j in i.split('\t')] for i in AACC3.split('\n')])
AACC4 = np.array([[float(j) for j in i.split('\t')] for i in AACC4.split('\n')])
AACC5 = np.array([[float(j) for j in i.split('\t')] for i in AACC5.split('\n')])
OACC0 = np.array([[float(j) for j in i.split('\t')] for i in OACC0.split('\n')])
OACC1 = np.array([[float(j) for j in i.split('\t')] for i in OACC1.split('\n')])
OACC2 = np.array([[float(j) for j in i.split('\t')] for i in OACC2.split('\n')])
OACC3 = np.array([[float(j) for j in i.split('\t')] for i in OACC3.split('\n')])
OACC4 = np.array([[float(j) for j in i.split('\t')] for i in OACC4.split('\n')])
OACC5 = np.array([[float(j) for j in i.split('\t')] for i in OACC5.split('\n')])
TACC0 = np.array([[float(j) for j in i.split('\t')] for i in TACC0.split('\n')])
TACC1 = np.array([[float(j) for j in i.split('\t')] for i in TACC1.split('\n')])
TACC2 = np.array([[float(j) for j in i.split('\t')] for i in TACC2.split('\n')])
TACC3 = np.array([[float(j) for j in i.split('\t')] for i in TACC3.split('\n')])
TACC4 = np.array([[float(j) for j in i.split('\t')] for i in TACC4.split('\n')])
TACC5 = np.array([[float(j) for j in i.split('\t')] for i in TACC5.split('\n')])

fig, axn = plt.subplots(2, 6, figsize=(20,6), sharex=True, sharey=True)
xlabel = ['0%', '5%', '10%', '15%', '20%', '25%', '30%', '35%', '40%', '45%']
ylabel = ['5%', '10%', '15%', '20%', '25%', '30%', '35%', '40%', '45%', '50%']
cbar_ax = fig.add_axes([0.896, 0.2, 0.01, 0.63])

totalacc = [AACC0, AACC1, AACC2, AACC3, AACC4, AACC5,
            OACC0, OACC1, OACC2, OACC3, OACC4, OACC5,
            TACC0, TACC1, TACC2, TACC3, TACC4, TACC5]

for n,i in enumerate(totalacc[:12]):
    sns.heatmap(i, ax=axn[n//6, n%6],vmin=0, vmax=1,
                xticklabels=xlabel,yticklabels=ylabel, cbar=n == 0, cbar_ax=None if n else cbar_ax)
    if n<6:
        axn[n//6, n%6].set_title(r"$\beta=0.{{{0}}}$".format(n))
fig.tight_layout(rect=[0.02, 0.01, .9, 1], pad=2.0)
for ax_ in axn:
    for ax in ax_:
        for tick in ax.yaxis.get_majorticklabels():
            tick.set_fontsize(10)
            tick.set_rotation(0)
for ax_ in axn:
    for ax in ax_:
        for tick in ax.xaxis.get_majorticklabels():
            tick.set_fontsize(10)
fig.supxlabel('Lower bound percentage')
fig.supylabel('Upper bound percentage')
plt.savefig('amazon_hyperparameter_m.eps', format='eps',bbox_inches='tight')